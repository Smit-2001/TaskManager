@model IEnumerable<TaskManagerShared.Models.TodoTask>
@{
    ViewData["Title"] = "Task Dashboard";

    var query = Context.Request.Query;
    var selectedStatus = query["status"].ToString();
    var selectedCategory = query["category"].ToString();
    var selectedPriority = query["priority"].ToString();
    var selectedDate = query["filter"].ToString();
    var searchTitle = query["title"].ToString();
    var selectedSort = query["sortBy"].ToString();
}
<h2>Task Dashboard</h2>

<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <label class="form-label">Search Title</label>
        <input type="text" name="title" value="@searchTitle" class="form-control" placeholder="Enter task title..." />
    </div>

    <div class="col-md-3">
        <label class="form-label">Due Date</label>
        <input type="date" name="filter" value="@selectedDate" class="form-control" />
    </div>

    <div class="col-md-3">
        <label class="form-label">Status</label>
        <select name="status" class="form-select">
            <option value="">-- All --</option>
            <option value="Completed" selected="@(selectedStatus == "Completed")">Completed</option>
            <option value="Pending" selected="@(selectedStatus == "Pending")">Pending</option>
        </select>
    </div>

    <div class="col-md-3">
        <label class="form-label">Category</label>
        <select name="category" class="form-select">
            <option value="">-- All --</option>
            <option value="Work" selected="@(selectedCategory == "Work")">Work</option>
            <option value="Personal" selected="@(selectedCategory == "Personal")">Personal</option>
            <option value="Study" selected="@(selectedCategory == "Study")">Study</option>
            <option value="General" selected="@(selectedCategory == "General")">General</option>
        </select>
    </div>

    <div class="col-md-3">
        <label class="form-label">Priority</label>
        <select name="priority" class="form-select">
            <option value="">-- All --</option>
            <option value="Low" selected="@(selectedPriority == "Low")">Low</option>
            <option value="Medium" selected="@(selectedPriority == "Medium")">Medium</option>
            <option value="High" selected="@(selectedPriority == "High")">High</option>
        </select>
    </div>

    <div class="col-md-3">
        <label class="form-label">Sort By</label>
        <select name="sortBy" class="form-select">
            <option value="">Default (Priority → Due Date)</option>
            <option value="duedate_asc" selected="@(selectedSort == "duedate_asc")">Due Date (Earliest First)</option>
            <option value="duedate_desc" selected="@(selectedSort == "duedate_desc")">Due Date (Latest First)</option>
            <option value="status" selected="@(selectedSort == "status")">Completion Status (Pending → Completed)</option>
            <option value="title_asc" selected="@(selectedSort == "title_asc")">Title (A–Z)</option>
            <option value="title_desc" selected="@(selectedSort == "title_desc")">Title (Z–A)</option>
            <option value="category_asc" selected="@(selectedSort == "category_asc")">Category (A–Z)</option>
            <option value="category_desc" selected="@(selectedSort == "category_desc")">Category (Z–A)</option>
            <option value="priority_desc" selected="@(selectedSort == "priority_desc")">Priority (High → Low)</option>
            <option value="priority_asc" selected="@(selectedSort == "priority_asc")">Priority (Low → High)</option>
        </select>
    </div>

    <div class="col-md-12">
        <button type="submit" class="btn btn-info">Apply Filters</button>
        <a asp-action="Index" class="btn btn-secondary">Reset</a>
    </div>
</form>

<hr />

<p><strong>Total Tasks:</strong> @ViewBag.Total | <strong>Completed:</strong> @ViewBag.Completed</p>

<canvas id="progressChart" width="100" height="100"></canvas>

<a asp-action="Create" class="btn btn-primary">+ Add Task</a>

<table class="table table-bordered mt-3">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Priority</th>
            <th>Due Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Category</td>
                <td>@task.Priority</td>
                <td>@task.DueDate.ToShortDateString()</td>
                <td>@(task.IsCompleted ? "✅ Done" : "⏳ Pending")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@task.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@task.Id">Delete</a> |
                    @if (!task.IsCompleted)
                    {
                        <form asp-action="MarkComplete" method="post" style="display:inline">
                            <input type="hidden" name="id" value="@task.Id" />
                            <button type="submit" class="btn btn-success btn-sm">Mark Done</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('progressChart').getContext('2d');
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Completed', 'Pending'],
                datasets: [{
                    data: [@ViewBag.Completed, @ViewBag.Total - @ViewBag.Completed],
                    backgroundColor: ['#28a745', '#dc3545']
                }]
            }
        });
    </script>
}
